From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Mon, 15 Nov 2021 02:34:43 +1000
Subject: [PATCH] MultiPaper build changes


diff --git a/build.gradle.kts b/build.gradle.kts
index bd224e1d9bfc49feca9f0291df839bed9d5842c4..b1c70490956f6b77bb8bbb372a4ad5bbca0efe94 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -13,7 +13,7 @@ configurations.named(log4jPlugins.compileClasspathConfigurationName) {
 val alsoShade: Configuration by configurations.creating
 
 dependencies {
-    implementation(project(":shreddedpaper-api")) // Purpur // ShreddedPaper
+    implementation(project(":multipaper-api")) // Purpur // ShreddedPaper // MultiPaper
     // Paper start
     implementation("org.jline:jline-terminal-jansi:3.21.0")
     implementation("net.minecrell:terminalconsoleappender:1.3.0")
@@ -84,14 +84,14 @@ tasks.jar {
         val gitBranch = git("rev-parse", "--abbrev-ref", "HEAD").getText().trim() // Paper
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "ShreddedPaper", // Purpur // ShreddedPaper
+            "Implementation-Title" to "MultiPaper", // Purpur // ShreddedPaper // MultiPaper
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date, // Paper
-            "Specification-Title" to "ShreddedPaper", // Purpur // ShreddedPaper
+            "Specification-Title" to "MultiPaper", // Purpur // ShreddedPaper // MultiPaper
             "Specification-Version" to project.version,
-            "Specification-Vendor" to "ShreddedPaper Team", // Purpur // ShreddedPaper
-            "Brand-Id" to "shreddedpaper:shreddedpaper", // Purpur // ShreddedPaper
-            "Brand-Name" to "ShreddedPaper", // Purpur // ShreddedPaper
+            "Specification-Vendor" to "MultiPaper Team", // Purpur // ShreddedPaper // MultiPaper
+            "Brand-Id" to "multipaper:multipaper", // Purpur // ShreddedPaper // MultiPaper
+            "Brand-Name" to "MultiPaper", // Purpur // ShreddedPaper // MultiPaper
             "Build-Number" to (build ?: ""),
             "Build-Time" to Instant.now().toString(),
             "Git-Branch" to gitBranch, // Paper
diff --git a/src/main/java/com/destroystokyo/paper/Metrics.java b/src/main/java/com/destroystokyo/paper/Metrics.java
index 430f462955f599907b5300809d312c79e2e24b33..d697765520dd103b63a8e79529a9121d3964b1bd 100644
--- a/src/main/java/com/destroystokyo/paper/Metrics.java
+++ b/src/main/java/com/destroystokyo/paper/Metrics.java
@@ -593,7 +593,7 @@ public class Metrics {
             boolean logFailedRequests = config.getBoolean("logFailedRequests", false);
             // Only start Metrics, if it's enabled in the config
             if (config.getBoolean("enabled", true)) {
-                Metrics metrics = new Metrics("ShreddedPaper", serverUUID, logFailedRequests, Bukkit.getLogger()); // Pufferfish // Purpur // ShreddedPaper
+                Metrics metrics = new Metrics("MultiPaper", serverUUID, logFailedRequests, Bukkit.getLogger()); // Pufferfish // Purpur // ShreddedPaper // MultiPaper
 
                 metrics.addCustomChart(new Metrics.SimplePie("minecraft_version", () -> {
                     String minecraftVersion = Bukkit.getVersion();
@@ -603,7 +603,7 @@ public class Metrics {
 
                 metrics.addCustomChart(new Metrics.SingleLineChart("players", () -> Bukkit.getOnlinePlayers().size()));
                 metrics.addCustomChart(new Metrics.SimplePie("online_mode", () -> Bukkit.getOnlineMode() ? "online" : (io.papermc.paper.configuration.GlobalConfiguration.get().proxies.isProxyOnlineMode() ? "bungee" : "offline"))); // Purpur
-                metrics.addCustomChart(new Metrics.SimplePie("shreddedpaper_version", () -> (org.bukkit.craftbukkit.Main.class.getPackage().getImplementationVersion() != null) ? org.bukkit.craftbukkit.Main.class.getPackage().getImplementationVersion() : "unknown")); // Purpur // ShreddedPaper
+                metrics.addCustomChart(new Metrics.SimplePie("multipaper_version", () -> (org.bukkit.craftbukkit.Main.class.getPackage().getImplementationVersion() != null) ? org.bukkit.craftbukkit.Main.class.getPackage().getImplementationVersion() : "unknown")); // Purpur // ShreddedPaper // MultiPaper
 
                 metrics.addCustomChart(new Metrics.DrilldownPie("java_version", () -> {
                     Map<String, Map<String, Integer>> map = new HashMap<>();
diff --git a/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java b/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
index 9fb833a04c902a54118d99284076ec4401f8799b..efef8e30c93626fd55da6adf62cf196c76da4096 100644
--- a/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
+++ b/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
@@ -36,7 +36,7 @@ public class PaperVersionFetcher implements VersionFetcher {
     private static final int DISTANCE_ERROR = -1;
     private static final int DISTANCE_UNKNOWN = -2;
     // Purpur start
-    private static final String DOWNLOAD_PAGE = "https://multipaper.io/shreddedpaper/download.html";
+    private static final String DOWNLOAD_PAGE = "https://multipaper.io/download.html"; // MultiPaper
     private static int distance = DISTANCE_UNKNOWN; public int distance() { return distance; }
     // Purpur end
 
@@ -52,7 +52,7 @@ public class PaperVersionFetcher implements VersionFetcher {
         if (build.buildNumber().isEmpty() && build.gitCommit().isEmpty()) {
             updateMessage = text("You are running a development version without access to version information", color(0xFF5300));
         } else {
-            updateMessage = getUpdateStatusMessage("MultiPaper/ShreddedPaper", build); // Purpur
+            updateMessage = getUpdateStatusMessage("MultiPaper/MultiPaper", build); // Purpur // MultiPaper
         }
         final @Nullable Component history = this.getHistory();
 
@@ -89,18 +89,18 @@ public class PaperVersionFetcher implements VersionFetcher {
     private static int fetchDistanceFromSiteApi(final ServerBuildInfo build, final int jenkinsBuild) {
         try {
             try (final BufferedReader reader = Resources.asCharSource(
-                    URI.create("https://api.multipaper.io/v2/projects/shreddedpaper/versions/" + build.minecraftVersionId()).toURL(), // Purpur // ShreddedPaper
+                    URI.create("https://api.multipaper.io/v2/projects/multipaper/versions/" + build.minecraftVersionId()).toURL(), // Purpur // ShreddedPaper // MultiPaper
                 Charsets.UTF_8
             ).openBufferedStream()) {
                 final JsonObject json = new Gson().fromJson(reader, JsonObject.class);
-                final JsonArray builds = json.getAsJsonArray("builds"); // Purpur // ShreddedPaper
+                final JsonArray builds = json.getAsJsonArray("builds"); // Purpur // MultiPaper
                 final int latest = StreamSupport.stream(builds.spliterator(), false)
                         .mapToInt(JsonElement::getAsInt)
                         .max()
-                        .orElseThrow(); // ShreddedPaper
+                        .orElseThrow(); // MultiPaper
                 return latest - jenkinsBuild;
             } catch (final JsonSyntaxException ex) {
-                LOGGER.error("Error parsing json from ShreddedPaper's downloads API", ex); // Purpur // ShreddedPaper
+                LOGGER.error("Error parsing json from MultiPaper's downloads API", ex); // Purpur // ShreddedPaper // MultiPaper
                 return DISTANCE_ERROR;
             }
         } catch (final IOException e) {
diff --git a/src/main/java/com/destroystokyo/paper/console/PaperConsole.java b/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
index 9f512c6dd970d013a8dc5d8f4e37c5dce3f38bef..491c9e327ec566cdde010ee79b711fe1b4880631 100644
--- a/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
+++ b/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
@@ -17,7 +17,7 @@ public final class PaperConsole extends SimpleTerminalConsole {
     @Override
     protected LineReader buildReader(LineReaderBuilder builder) {
         builder
-                .appName("ShreddedPaper") // Purpur // ShreddedPaper
+                .appName("MultiPaper") // Purpur // ShreddedPaper // MultiPaper
                 .variable(LineReader.HISTORY_FILE, java.nio.file.Paths.get(".console_history"))
                 .completer(new ConsoleCommandCompleter(this.server))
                 .option(LineReader.Option.COMPLETE_IN_WORD, true);
diff --git a/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java b/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
index fc73d25bbe14f6ac0bf5d370159447ebb9479011..f78ebb1515154f3878bdd8299a0576c5c15c4c9d 100644
--- a/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
+++ b/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
@@ -31,7 +31,7 @@ public record ServerBuildInfoImpl(
     private static final String ATTRIBUTE_GIT_COMMIT = "Git-Commit";
 
     private static final String BRAND_PAPER_NAME = "Paper";
-    private static final String BRAND_PURPUR_NAME = "ShreddedPaper"; // Purpur // ShreddedPaper
+    private static final String BRAND_PURPUR_NAME = "MultiPaper"; // Purpur // ShreddedPaper // MultiPaper
 
     private static final String BUILD_DEV = "DEV";
 
diff --git a/src/main/java/net/minecraft/CrashReport.java b/src/main/java/net/minecraft/CrashReport.java
index 63f9c70666eaa90c68fa342e435bcfbd31ef73ae..ecf67626707174a7eb5b4f4426dc42f8f112c0d7 100644
--- a/src/main/java/net/minecraft/CrashReport.java
+++ b/src/main/java/net/minecraft/CrashReport.java
@@ -127,7 +127,7 @@ public class CrashReport {
         stringbuilder.append("---- Minecraft Crash Report ----\n");
         // Purpur start
         stringbuilder.append("// ");
-        stringbuilder.append("// DO NOT REPORT THIS TO PAPER! REPORT TO SHREDDEDPAPER INSTEAD!"); // ShreddedPaper
+        stringbuilder.append("// DO NOT REPORT THIS TO PAPER! REPORT TO MULTIPAPER INSTEAD!"); // ShreddedPaper // MultiPaper
         // Purpur end
         stringbuilder.append("// ");
         stringbuilder.append(CrashReport.getErrorComment());
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 6aa46eca869b7cbf358a76ca88faa285999a5350..efa7aee51fd3063360a8ab2e5ab96839140b4ca8 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -963,7 +963,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         shutdownThread = Thread.currentThread();
         org.spigotmc.WatchdogThread.doStop(); // Paper
         if (!isSameThread()) {
-            MinecraftServer.LOGGER.info("Stopping main thread (Ignore any thread death message you see! - DO NOT REPORT THREAD DEATH TO SHREDDEDPAPER)"); // Purpur // ShreddedPaper
+            MinecraftServer.LOGGER.info("Stopping main thread (Ignore any thread death message you see! - DO NOT REPORT THREAD DEATH TO MULTIPAPER)"); // Purpur // ShreddedPaper // MultiPaper
             while (this.getRunningThread().isAlive()) {
                 this.getRunningThread().stop();
                 try {
diff --git a/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java b/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java
index 727a4e4d5f93bad6f9539e2d742baf77819fafd6..ffe78b4193fc3dcff9ae435b67c3f3420aa4657a 100644
--- a/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java
+++ b/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java
@@ -56,7 +56,7 @@ public class MinecraftServerGui extends JComponent {
             ;
         }
 
-        final JFrame jframe = new JFrame("ShreddedPaper Minecraft server"); // Purpur // ShreddedPaper
+        final JFrame jframe = new JFrame("MultiPaper Minecraft server"); // Purpur // ShreddedPaper // MultiPaper
         final MinecraftServerGui servergui = new MinecraftServerGui(server);
 
         jframe.setDefaultCloseOperation(2);
@@ -64,7 +64,7 @@ public class MinecraftServerGui extends JComponent {
         jframe.pack();
         jframe.setLocationRelativeTo((Component) null);
         jframe.setVisible(true);
-        jframe.setName("ShreddedPaper Minecraft server"); // Paper - Improve ServerGUI // Purpur // ShreddedPaper
+        jframe.setName("MultiPaper Minecraft server"); // Paper - Improve ServerGUI // Purpur // ShreddedPaper // MultiPaper
 
         // Paper start - Improve ServerGUI
         try {
@@ -76,7 +76,7 @@ public class MinecraftServerGui extends JComponent {
         jframe.addWindowListener(new WindowAdapter() {
             public void windowClosing(WindowEvent windowevent) {
                 if (!servergui.isClosing.getAndSet(true)) {
-                    jframe.setTitle("ShreddedPaper Minecraft server - shutting down!"); // Purpur // ShreddedPaper
+                    jframe.setTitle("MultiPaper Minecraft server - shutting down!"); // Purpur // ShreddedPaper // MultiPaper
                     server.halt(true);
                     servergui.runFinalizers();
                 }
diff --git a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
index e8437d039af0457fc6fc877def12f973ab263735..8cc56b33ba74e89e1ad158842a4d0ea16ea0f126 100644
--- a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
+++ b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
@@ -504,7 +504,7 @@ public class CraftScheduler implements BukkitScheduler {
                 this.parsePending();
             } else {
                 // this.debugTail = this.debugTail.setNext(new CraftAsyncDebugger(currentTick + CraftScheduler.RECENT_TICKS, task.getOwner(), task.getTaskClass())); // Paper
-                task.getOwner().getLogger().log(Level.SEVERE, "Unexpected Async Task in the Sync Scheduler. Report this to ShreddedPaper"); // Paper // Purpur // ShreddedPaper
+                task.getOwner().getLogger().log(Level.SEVERE, "Unexpected Async Task in the Sync Scheduler. Report this to MultiPaper"); // Paper // Purpur // ShreddedPaper // MultiPaper
                 // We don't need to parse pending
                 // (async tasks must live with race-conditions if they attempt to cancel between these few lines of code)
             }
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
index ed2f3845afed661a5f620efc071cd71c2bc7d613..2d3b65382e7f4e70be84ac41a25a188e6bb33ab1 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
@@ -11,7 +11,7 @@ public final class Versioning {
     public static String getBukkitVersion() {
         String result = "Unknown-Version";
 
-        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/io.multipaper.shreddedpaper/shreddedpaper-api/pom.properties"); // Pufferfish // Purpur // ShreddedPaper
+        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/io.multipaper/multipaper-api/pom.properties"); // Pufferfish // Purpur // ShreddedPaper // MultiPaper
         Properties properties = new Properties();
 
         if (stream != null) {
diff --git a/src/main/java/org/spigotmc/WatchdogThread.java b/src/main/java/org/spigotmc/WatchdogThread.java
index 3862ddfdb2581c3517d2ee174d56afa5ee1d6d97..fe621a12342aa7c25bf3b83758927819358080da 100644
--- a/src/main/java/org/spigotmc/WatchdogThread.java
+++ b/src/main/java/org/spigotmc/WatchdogThread.java
@@ -159,14 +159,14 @@ public final class WatchdogThread extends io.papermc.paper.util.TickThread // Pa
                 if (isLongTimeout) {
                 // Paper end
                 log.log( Level.SEVERE, "------------------------------" );
-                log.log( Level.SEVERE, "The server has stopped responding! This is (probably) not a ShreddedPaper bug." ); // Paper // Purpur // ShreddedPaper
+                log.log( Level.SEVERE, "The server has stopped responding! This is (probably) not a MultiPaper bug." ); // Paper // Purpur // ShreddedPaper // MultiPaper
                 log.log( Level.SEVERE, "If you see a plugin in the Server thread dump below, then please report it to that author" );
                 log.log( Level.SEVERE, "\t *Especially* if it looks like HTTP or MySQL operations are occurring" );
                 log.log( Level.SEVERE, "If you see a world save or edit, then it means you did far more than your server can handle at once" );
                 log.log( Level.SEVERE, "\t If this is the case, consider increasing timeout-time in spigot.yml but note that this will replace the crash with LARGE lag spikes" );
-                log.log( Level.SEVERE, "If you are unsure or still think this is a ShreddedPaper bug, please report this to https://github.com/MultiPaper/ShreddedPaper/issues" ); // Purpur // ShreddedPaper
+                log.log( Level.SEVERE, "If you are unsure or still think this is a MultiPaper bug, please report this to https://github.com/MultiPaper/MultiPaper/issues" ); // Purpur // ShreddedPaper // MultiPaper
                 log.log( Level.SEVERE, "Be sure to include ALL relevant console errors and Minecraft crash reports" );
-                log.log( Level.SEVERE, "ShreddedPaper version: " + Bukkit.getServer().getVersion() ); // Purpur // ShreddedPaper
+                log.log( Level.SEVERE, "MultiPaper version: " + Bukkit.getServer().getVersion() ); // Purpur // ShreddedPaper // MultiPaper
                 //
                 if ( net.minecraft.world.level.Level.lastPhysicsProblem != null )
                 {
@@ -188,12 +188,12 @@ public final class WatchdogThread extends io.papermc.paper.util.TickThread // Pa
                 // Paper end
                 } else
                 {
-                    log.log(Level.SEVERE, "--- DO NOT REPORT THIS TO SHREDDEDPAPER - THIS IS NOT A BUG OR A CRASH  - " + Bukkit.getServer().getVersion() + " ---"); // Purpur // ShreddedPaper
+                    log.log(Level.SEVERE, "--- DO NOT REPORT THIS TO MULTIPAPER - THIS IS NOT A BUG OR A CRASH  - " + Bukkit.getServer().getVersion() + " ---"); // Purpur // ShreddedPaper // MultiPaper
                     log.log(Level.SEVERE, "The server has not responded for " + (currentTime - lastTick) / 1000 + " seconds! Creating thread dump");
                 }
                 // Paper end - Different message for short timeout
                 log.log( Level.SEVERE, "------------------------------" );
-                log.log( Level.SEVERE, "Server thread dump (Look for plugins here before reporting to ShreddedPaper!):" ); // Paper // Purpur // ShreddedPaper
+                log.log( Level.SEVERE, "Server thread dump (Look for plugins here before reporting to MultiPaper!):" ); // Paper // Purpur // ShreddedPaper // MultiPaper
                 io.papermc.paper.chunk.system.scheduling.ChunkTaskScheduler.dumpAllChunkLoadInfo(isLongTimeout); // Paper - rewrite chunk system
                 this.dumpTickingInfo(); // Paper - log detailed tick information
                 WatchdogThread.dumpThread( ManagementFactory.getThreadMXBean().getThreadInfo( MinecraftServer.getServer().serverThread.getId(), Integer.MAX_VALUE ), log );
@@ -214,7 +214,7 @@ public final class WatchdogThread extends io.papermc.paper.util.TickThread // Pa
                     WatchdogThread.dumpThread( thread, log );
                 }
                 } else {
-                    log.log(Level.SEVERE, "--- DO NOT REPORT THIS TO SHREDDEDPAPER - THIS IS NOT A BUG OR A CRASH ---"); // Purpur // ShreddedPaper
+                    log.log(Level.SEVERE, "--- DO NOT REPORT THIS TO MULTIPAPER - THIS IS NOT A BUG OR A CRASH ---"); // Purpur // ShreddedPaper // MultiPaper
                 }
 
                 log.log( Level.SEVERE, "------------------------------" );
